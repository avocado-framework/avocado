#!/usr/bin/env python

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; specifically version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See LICENSE for more details.
#
# Copyright: RedHat 2013-2014
# Author: Lucas Meneghel Rodrigues <lmr@redhat.com>


import sys
try:
    import logging
    import os
    import tempfile
    import traceback
except:
    sys.stderr.write("Unable to import basic python libraries, please "
                     "reinstall avocado and dependencies.\n")
    sys.exit(3)


def handle_exception(*exc_info):
    # Print traceback into avocado.app.traceback if initialized
    msg = "Avocado crashed:\n" + "".join(traceback.format_exception(*exc_info))
    log = logging.getLogger("avocado.app.tracebacks")
    if getattr(log, "handlers", False):
        log.error(msg)
    # Store traceback in data_dir or TMPDIR
    avocado_data = None
    prefix = "avocado-traceback-"
    try:
        import time
        prefix += time.strftime("%F_%T") + "-"
        from avocado.core import data_dir
        avocado_data = data_dir.get_data_dir()
    except:
        pass
    tmp, name = tempfile.mkstemp(".log", prefix, avocado_data)
    os.write(tmp, msg)
    os.close(tmp)
    # Print friendly message in console-like output
    msg = ("Avocado crashed unexpectidly: %s\nYou can find details in %s"
           % (exc_info[1], name))
    for name in ("avocado.app", "avocado.test", None):
        log = logging.getLogger(name)
        for handler in getattr(log, "handlers", []):
            if isinstance(handler, logging.StreamHandler):
                break
        else:
            continue
        log.critical(msg)
        break
    else:       # Log not found, use stderr and hope it's enabled
        sys.stderr.write(msg + '\n')
    sys.exit(3)

if __name__ == '__main__':
    sys.excepthook = handle_exception


# simple magic for using scripts within a source tree
basedir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if os.path.isdir(os.path.join(basedir, 'avocado')):
    os.environ['PATH'] += ":" + os.path.join(basedir, 'scripts')
    os.environ['PATH'] += ":" + os.path.join(basedir, 'libexec')
    sys.path.append(basedir)

from avocado.core.app import AvocadoApp

if __name__ == '__main__':
    app = AvocadoApp()
    sys.exit(app.run())
