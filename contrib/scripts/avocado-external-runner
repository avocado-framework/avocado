#!/usr/bin/env python

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; specifically version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See LICENSE for more details.
#
# Copyright: Red Hat Inc. 2021
# Author: Cleber Rosa <cleber@redhat.com>
#         Beraldo Leal <bleal@redhat.com>

# Command line helper, wrap command line ops to avocado friendly way. Use this
# as the new external-runner.
#
# Examples:
#
#  $ ./avocado-external-runner curl google.com
#  $ ./avocado-external-runner dnf update -y
#
#
# Note: This example is using only one command, but could easly be adapted to
#       support multiple tests in a single suite.
#
# Note: Here we are using "{uri}-{args[0]}" as the runnable identifier because
#       it will be suitable for most of the cases. However feel free to adapt
#       the "identifier_format" to your needs.

import sys

from avocado.core.job import Job
from avocado.core.nrunner import Runnable
from avocado.core.suite import TestSuite
from avocado.utils.path import find_command


if __name__ == '__main__':
    command = sys.argv[1:]
    if not command:
        print("ERROR: no command given", file=sys.stderr)
        sys.exit(2)

    runnable = Runnable.from_args({'kind': 'exec-test',
                                   'uri': find_command(command[0]),
                                   'arg': command[1:]})

    config = {"runner.identifier_format": "{uri}-{args[0]}"}
    suite = TestSuite(tests=[runnable], name="external-runner", config=config)
    with Job({}, [suite]) as j:
        sys.exit(j.run())
