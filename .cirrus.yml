redhat_version_task:
    version_script:
       - python3 -c 'import setuptools' || dnf -y install python3 python3-setuptools
       - python3 setup.py develop --user
       - python3 -m avocado --version
    container:
        matrix:
          - image: fedora:32
          - image: fedora:33
          - image: registry.access.redhat.com/ubi8/ubi

redhat_egg_task:
    egg_script:
       - python3 -c 'import setuptools' || dnf -y install python3 python3-setuptools
       - python3 setup.py bdist_egg
       - mv dist/avocado_framework-*egg /tmp
       - python3 setup.py clean --all
       - python3 -c 'import sys; import glob; sys.path.insert(0, glob.glob("/tmp/avocado_framework-*.egg")[0]); from avocado.core.main import main; sys.exit(main())' run /bin/true
       - cd /tmp
       - python3 -c 'import sys; from pkg_resources import require; require("avocado-framework"); from avocado.core.main import main; sys.exit(main())' run /bin/true
    container:
        matrix:
          - image: fedora:32
          - image: fedora:33
          - image: fedora:34
          - image: registry.access.redhat.com/ubi8/ubi

debian_version_task:
    version_script:
       - python3 --version || (apt update && apt -y install python3 python3-setuptools)
       - python3 setup.py develop --user
       - python3 -m avocado --version

    container:
        matrix:
          - image: debian:9.13
          - image: debian:10.8
          - image: ubuntu:18.04
          - image: ubuntu:20.04

debian_egg_task:
    egg_script:
       - python3 --version || (apt update && apt -y install python3 python3-setuptools)
       - python3 setup.py bdist_egg
       - mv dist/avocado_framework-*egg /tmp
       - python3 setup.py clean --all
       - python3 -c 'import sys; import glob; sys.path.insert(0, glob.glob("/tmp/avocado_framework-*.egg")[0]); from avocado.core.main import main; sys.exit(main())' run /bin/true
       - cd /tmp
       - python3 -c 'import sys; from pkg_resources import require; require("avocado-framework"); from avocado.core.main import main; sys.exit(main())' run /bin/true
    container:
        matrix:
          - image: debian:9.13
          - image: debian:10.8
          - image: ubuntu:18.04
          - image: ubuntu:20.04

windows_smokecheck_task:
    version_script:
       - choco install -y python3 --version 3.9.0
       - C:\Python39\python setup.py develop --user
       - C:\Python39\python -m avocado --help
       - C:\Python39\python -m avocado run --test-runner=nrunner examples\tests\passtest.py
    windows_container:
       image: cirrusci/windowsservercore:2019

fedora_selftests_task:
    selftests_script:
       - make develop
       - PATH=$HOME/.local/bin:$PATH LANG=en_US.UTF-8 AVOCADO_CHECK_LEVEL=0 python3 selftests/check.py --disable-static-checks
    container:
        matrix:
          - image: quay.io/avocado-framework/avocado-ci-fedora-32
          - image: quay.io/avocado-framework/avocado-ci-fedora-33

#
# This is a *partial* check for the behavior of the safeloader, that
# compares it to Python's unittest behavior.  This is intended to help
# in the resolution of https://github.com/avocado-framework/avocado/issues/4625
# avoiding new regressions.  It should also be expanded (and/or converted
# into a selftest) to include avocado-instrumented tests too.
#
safeloader_task:
    selftests_script:
       - dnf -y install diffutils
       - make develop
       - for i in $(git grep -c -E 'import unittest$' selftests/unit/test_*.py selftests/unit/utils/test_*.py | cut -d ':' -f 1); do echo "*** $i ***"; python3 contrib/scripts/find-python-unittest $i > /tmp/1; AVOCADO_SAFELOADER_UNITTEST_ORDER_COMPAT=1 python3 contrib/scripts/avocado-safeloader-find-python-unittest $i > /tmp/2; diff -u /tmp/1 /tmp/2; done;
    container:
        image: quay.io/avocado-framework/avocado-ci-fedora-32
