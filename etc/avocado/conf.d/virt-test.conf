[virt_test]
# Path to virt-test, required for the compatibility plugin to locate
# virt-test libs. You should set this locally for avocado users.
# For people working on the compatibility layer itself, you can export the
# environment variable VIRT_TEST_DIR with that location instead of using
# the config system.
virt_test_path=
[virt_test.setup]
# Run the setup procedure (uncompress JeOS' pristine image).
# The keys below help you customize the procedure
run_setup=False
# Don't restore the JeOS at the beginning of the test job (faster, but unsafe)
# This has no effect unless you set run_setup=True or --vt-setup on the cmdline
keep_image=False
# Don't restore the JeOS between tests (faster, but unsafe)
# This has no effect unless you set run_setup=True or --vt-setup on the cmdline
keep_image_between_tests=False
# Keep guest running between tests (faster, but unsafe)
keep_guest_running=False
[virt_test.common]
# Data dir path. If none specified, the default virt-test data dir will be used
data_dir =
# Enable only type specific tests. Shared tests will not be tested
type_specific_only = False
# RAM dedicated to the main VM
mem = 1024
# Architecture under test
arch =
# Machine type under test
machine_type =
[virt_test.qemu]
# Path to a custom qemu binary to be tested
qemu_bin =
# Path to a custom qemu binary to be tested for the
# destination of a migration, overrides qemu_bin for
# that particular purpose
qemu_dst_bin =
# Accelerator used to run qemu (kvm or tcg)
accel = kvm
# Nettype (bridge, user, none)
nettype = user
# Bridge name to be used if you select bridge as a nettype
netdst = virbr0
# Whether to enable vhost for qemu (on/off/force). Depends on nettype=bridge
vhost = off
# Monitor type (human or qmp)
monitor = human
# Number of virtual cpus to use (1 or 2)
smp = 2
# Image format type to use (any valid qemu format)
image_type = qcow2
# Guest network card model (any valid qemu card)
nic_model = virtio_net
# Guest disk bus for main image. One of
# ('ide', 'scsi', 'virtio_blk', 'virtio_scsi', 'lsi_scsi', 'ahci', 'usb2', 'xenblk')
disk_bus = virtio_blk
# Enable qemu sandboxing (on/off)
sandbox = on
# Prevent qemu from loading sysconfdir/qemu.conf and sysconfdir/target-ARCH.conf at startup
# (yes/no)
defconfig = yes
# Use MALLOC_PERTURB_ env variable set to 1 to help catch memory allocation problems on qemu
# (yes/no)
malloc_perturb = yes
[virt_test.libvirt]
# Test connect URI for libvirt (qemu:///system', 'lxc:///')
connect_uri = qemu:///session
# Install the guest using import method before the tests are run
install_guest = False
# Remove the guest from libvirt. This will not delete the guest's disk file
remove_guest = False
[virt_test.debug]
# Don't clean up tmp files or VM processes at the end of a virt-test execution
no_cleanup = False
