# This file is just a sample config file used for the config parser unit tests
#
# NICs
variants:
    - @rtl8139:
        nic_model = rtl8139
        no ethtool
        jumbo:
            mtu = 1500
    - e1000:
        nic_model = e1000
        jumbo:
            mtu = 16110
        ethtool:
            # gso gro lro is only supported by latest kernel
            supported_features = "tx rx sg tso gso gro lro"
    - virtio_net:
        nic_model = virtio
        # You can add advanced attributes on nic_extra_params such as mrg_rxbuf
        #nic_extra_params =
        # You can add advanced attributes through netdev_extra_params
        # such as sndbuf, as an example, you can uncomment the
        # following lines to enable the vhost support ( only available
        # for tap )
        #netdev_extra_params = "vhost=on"
        jumbo:
            mtu = 65520
        ethtool:
            supported_features = "tx sg tso gso"
        whql.submission.device.net:
            test_device = VirtIO Ethernet Adapter$
            # Device selection for the NDISTest client machine
            dp_regex_testdev = VirtIO Ethernet Adapter$
            dp_regex_clientmsgdev = VirtIO Ethernet Adapter #2$
            dp_regex_clientsupportdev = VirtIO Ethernet Adapter #3$
            # Device selection for the NDISTest server machine
            dp_regex_servermsgdev = VirtIO Ethernet Adapter$
            dp_regex_serversupportdev = VirtIO Ethernet Adapter #2$
    -xennet:
        # placeholder
    - spapr-vlan:
        nic_model = spapr-vlan
        no ethtool
        jumbo:
            mtu = 1500
    - nic_custom:
        # If people want to specify something different.

variants:
    - @up:
        no autotest.npb autotest.tsc
    - smp2:
        smp = 2
        used_cpus = 2
        stress_boot: used_cpus = 10
        timedrift.with_load: used_cpus = 100

variants:
    - @ide:
        drive_format=ide
    - scsi:
        drive_format=scsi
    - virtio_blk:
        drive_format=virtio
        # Add -drive ...boot=yes unless qemu-kvm is 0.12.1.2 or newer
        # then kvm_vm will ignore this option.
        image_boot=yes
    - virtio_scsi:
        # supported formats are: scsi-hd, scsi-cd, scsi-disk, scsi-block,
        # scsi-generic
        # Use drive_format_$DISKNAME = "scsi-generic" to force disk driver
        # for single disk.
        # NOTE:  scsi-block and scsi-generic are pass-through physical dev only
        drive_format=scsi-hd
        cd_format=scsi-cd
        scsi_hba=virtio-scsi-pci
    - lsi_scsi:
        drive_format=scsi-hd
        cd_format=scsi-cd
        scsi_hba=lsi53c895a
    - ahci:
        drive_format=ahci
        cd_format=ahci
    - usb2:
        drive_format=usb2
        cd_format=usb2
        usbs += " install_ehci"
        usb_type_install_ehci = ich9-usb-ehci1
    - xenblk:
        # placeholder

variants:
    - @qcow2:
        image_format = qcow2
        check_image = yes
    - vmdk:
        no ioquit
        image_format = vmdk
    - raw:
        no ioquit
        image_format = raw
    - qed:
        no ioquit
        image_format = qed

variants:
    - @no_pci_assignable:
        pci_assignable = no
    - pf_assignable:
        pci_assignable = pf
        device_names = eth1
    - vf_assignable:
        pci_assignable = vf
        # Driver (kernel module) that supports SR-IOV hardware.
        # As of today (30-11-2009), we have 2 drivers for this type of hardware:
        # Intel® 82576 Gigabit Ethernet Controller - igb
        # Neterion® X3100™ - vxge
        driver = igb
        # vf_filter_re: Regex used to filter vf from lspci.
        vf_filter_re = "Virtual Function"
        # pf_filter_re: Regex used to filter pf from lspci. It will be used
        # when device_name could not filter the pf.
        pf_filter_re = "82576 Gigabit Network"
        # Driver option to specify the maximum number of virtual functions
        # (on vxge the option is , for example, is max_config_dev)
        # the default below is for the igb driver
        driver_option = "max_vfs=7"
        mac_ip_filter = "HWaddr (.\w+:\w+:\w+:\w+:\w+:\w+)\s+?inet addr:(.\d+\.\d+\.\d+\.\d+)"
        mac_changeable = "yes"
        sr-iov.sr_iov_negative.negative_max_vfs:
            driver_option = "max_vfs=-1"
        sr-iov.sr_iov_negative.more_than_max_vfs:
            driver_option = "max_vfs=8"

variants:
    - @smallpages:
    - hugepages:
        setup_hugepages = yes
        extra_params += " -mem-path /mnt/kvm_hugepage"
        domain_xml_snippet = "<memoryBacking><hugepages/></memoryBacking>"

variants:
    - @no_9p_export:
    - 9p_export:
         # 9p_fs_driver support include local, handle, proxy
         9p_fs_driver = local
         9p_export_dir = /mnt/
         # 9p_security_model support include passthrough, mapped, none
         9p_security_model = passthrough
         9p_immediate_writeout = no
         9p_readonly = no
         # Only used in case of proxy fs driver
         #9p_socket_name = /tmp/virtfs-9p-socket
         #9p_proxy_binary = virtfs-proxy-helper
