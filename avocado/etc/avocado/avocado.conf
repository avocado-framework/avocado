[datadir.paths]
# Avocado data dir (holds tests and test auxiliary data, such as ISO files).
base_dir = /var/lib/avocado
# You may override the specific test directory with test_dir
test_dir = /usr/share/doc/avocado/tests
# You may override the specific test auxiliary data directory with data_dir
data_dir = /var/lib/avocado/data
# You may override the specific job results directory with logs_dir
logs_dir = ~/avocado/job-results
# You can set a list of cache directories to be used by the avocado test
# fetch_asset() with 'cache_dirs'. read-only cache directories are also
# supported.
# cache_dirs = ['~/avocado/cache', '/mnt/cache']

[sysinfo.collect]
# Whether to collect system information during avocado jobs
enabled = on
# Overall timeout to collect commands, when <=0 no timeout is enforced
commands_timeout = -1
# Whether to take a list of installed packages previous to avocado jobs
installed_packages = False
# Whether to run certain commands in bg to give extra job debug information
profiler = False
# Force LANG for sysinfo collection
locale = C
# Enable sysinfo collection per-test
per_test = False
# Optimize sysinfo collection by removing duplicates between pre and post
optimize = False

[sysinfo.collectibles]
# File with list of commands that will be executed and have their output collected
commands = etc/avocado/sysinfo/commands
# File with list of files that will be collected verbatim
files = etc/avocado/sysinfo/files
# File with list of commands that will run alongside the job/test
profilers = etc/avocado/sysinfo/profilers

[runner.output]
# Whether to display colored output in terminals that support it
colored = True
# Whether to force colored output to non-tty outputs (e.g. log files)
# Allowed values: auto, always, never
color = auto
# Use utf8 encoding (True, False, None=autodetect)
utf8 =

[runner.timeout]
# The amount of time to give to the test process after it it has been
# interrupted (such as with CTRL+C)
after_interrupted = 60
# The amount of to wait for a test status after the process has been
# noticed to be dead
process_died = 10
# The amount of time to wait after a test has reported status but the
# test process has not finished
process_alive = 60

[job.output]
# Sets the base log level of the output generated by the job, which
# is also the base loging level for the --show command line option.
# Any of the Python logging levels names are allowed here. Examples:
# DEBUG, INFO, WARNING, ERROR, CRITICAL.  For more information refer
# to: https://docs.python.org/3/library/logging.html#levels
loglevel = DEBUG

[plugins]
# Disable listed plugins completely.  Use the fully qualified plugin
# name, as described in the Avocado documentation "Plugins" section.
# (e.g. "results.html")
disable = []
# Suppress notification about broken plugins in the app standard error.
# Add the name of each broken plugin you want to suppress the notification
# in the list. (e.g. "avocado_result_html")
skip_broken_plugin_notification = []
# Optionally you can specify the priority of test loaders (file) or test
# types (file.SIMPLE). Some of the plugins even support extra params
# (external:/bin/echo -e). Plugins will be used accordingly to the plugin
# priorities. It's possible to list plugins multiple times (with different
# options or test types).
# The keyword "@DEFAULT" will be replaced with all available unused loaders.
loaders = ['file', '@DEFAULT']

[plugins.resolver]
order = ['avocado-instrumented', 'python-unittest', 'glib', 'robot', 'exec-test']

[simpletests.status]
# Python regular expression that will make the test
# status WARN when matched. Defaults to disabled.
# Reference: http://docs.python.org/2.7/howto/regex.html
# warn_regex = ^WARN$

# Location to search the regular expression on.
# Accepted values: all, stdout, stderr.
# Defaults to all.
# warn_location = all

# Python regular expression that will make the test
# status SKIP when matched. Defaults to disabled.
# Reference: http://docs.python.org/2.7/howto/regex.html
# skip_regex = ^SKIP$

# Location to search the regular expression on.
# Accepted values: all, stdout, stderr.
# Defaults to all.
# skip_location = all
